exp1-pretrain-model: &exp1
  experiment:
    model_file: examples/output/<EXP>.mod
    hyp_file: examples/output/<EXP>.hyp
    out_file: examples/output/<EXP>.out
    err_file: examples/output/<EXP>.err
    run_for_epochs: 2
    eval_metrics: bleu
  train: !TrainingRegimen
    glob:
      default_layer_dim: 64
      dropout: 0.5
      weight_noise: 0.1
    dev_metrics: bleu
    corpus_parser: !BilingualCorpusParser
      src_reader: !PlainTextReader {}
      trg_reader: !PlainTextReader {}
      training_corpus: !BilingualTrainingCorpus
        train_src: examples/data/head.ja
        train_trg: examples/data/head.en
        dev_src: examples/data/head.ja
        dev_trg: examples/data/head.en
    model: !DefaultTranslator
      src_embedder: !SimpleWordEmbedder
        emb_dim: 64
      encoder: !BiLSTMSeqTransducer
        layers: 2
        input_dim: 64
      attender: !MlpAttender
        state_dim: 64
        hidden_dim: 64
        input_dim: 64
      trg_embedder: !SimpleWordEmbedder
        emb_dim: 64
      decoder: !MlpSoftmaxDecoder
        layers: 1
        mlp_hidden_dim: 64
        input_feeding: True
        bridge: !CopyBridge {}
  decode:
    src_file: examples/data/head.ja
  evaluate:
    ref_file: examples/data/head.en


exp2-finetune-model:
  << : *exp1
  train: !TrainingRegimen # load the pretrained model, but overwrite the corpus parser to finetune on different data (here: finetune on small sentences only)
    pretrained_model_file: examples/output/exp1-pretrain-model.mod
    corpus_parser: !BilingualCorpusParser
      src_reader: !PlainTextReader {}
      trg_reader: !PlainTextReader {}
      max_src_len: 15
      max_trg_len: 15
      training_corpus: !BilingualTrainingCorpus
        train_src: examples/data/head.ja
        train_trg: examples/data/head.en
        dev_src: examples/data/head.ja
        dev_trg: examples/data/head.en

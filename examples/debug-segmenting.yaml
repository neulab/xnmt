# Small config to help refactoring to make the model completely YAML based
defaults:
  experiment:
    model_file: examples/output/<EXP>.mod
    hyp_file: examples/output/<EXP>.hyp
    out_file: examples/output/<EXP>.out
    err_file: examples/output/<EXP>.err
    run_for_epochs: 2
    eval_metrics: bleu
  train:
    default_layer_dim: 64
    dropout: 0.5
    dev_metrics: bleu
    training_corpus: !BilingualTrainingCorpus
      train_src: examples/data/train-char.ja
      train_trg: examples/data/train.en
      dev_src: examples/data/dev-char.ja
      dev_trg: examples/data/dev.en
    corpus_parser: !BilingualCorpusParser
      src_reader: !PlainTextReader {}
      trg_reader: !PlainTextReader {}
      max_src_len: 15
      max_trg_len: 15
    model: !DefaultTranslator
      src_embedder: !SimpleWordEmbedder
        emb_dim: 64
      encoder: !SegmentingEncoder
        lmbd_learning:
          initial: 0.1
          warmup: 0
          grow: 2
          max: 1.0
          min: 0
        embed_encoder: !LSTMEncoder
          input_dim: 64
          hidden_dim: 64
          layers: 1
          bidirectional: true
        segment_transducer: !SegmentTransducer
          encoder: !LSTMEncoder
            input_dim: 64
            hidden_dim: 64
            bidirectional: false
            layers: 1
          transformer: !TailSegmentTransformer {}

      attender: !StandardAttender
        state_dim: 64
        hidden_dim: 64
        input_dim: 64
      trg_embedder: !SimpleWordEmbedder
        emb_dim: 64
      decoder: !MlpSoftmaxDecoder
        layers: 1
        mlp_hidden_dim: 64
  decode:
    src_file: examples/data/test-char.ja
    report_path: examples/output/<EXP>.report
    report_type: html, file
  evaluate:
    ref_file: examples/data/test.en

debug-segmenting:


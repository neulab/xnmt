# Sampling subword units for subword regularization
# Note that this requires 'sentencepiece' as an extra dependency
subword_sample: !Experiment 
  exp_global: !ExpGlobal
    model_file: '{EXP_DIR}/models/{EXP}.mod'
    log_file: '{EXP_DIR}/logs/{EXP}.log'
    default_layer_dim: 512
    dropout: 0.3
  model: !DefaultTranslator
    # Here we set the sample_train and alpha parameters to turn on sampling
    src_reader: !SentencePieceTextReader
      sample_train: True
      alpha: 0.1
      vocab: !Vocab
        vocab_file: examples/data/big-ja.vocab
        sentencepiece_vocab: True
      model_file: examples/data/big-ja.model
    trg_reader: !SentencePieceTextReader
      sample_train: True
      alpha: 0.1
      vocab: !Vocab
        vocab_file: examples/data/big-en.vocab
        sentencepiece_vocab: True
      model_file: examples/data/big-en.model
    src_embedder: !SimpleWordEmbedder
      emb_dim: 512
    encoder: !BiLSTMSeqTransducer
      layers: 1
    attender: !MlpAttender
      hidden_dim: 512
      state_dim: 512
      input_dim: 512
    trg_embedder: !SimpleWordEmbedder
      emb_dim: 512
    decoder: !AutoRegressiveDecoder
      rnn: !UniLSTMSeqTransducer
        layers: 1
      transform: !AuxNonLinear
        output_dim: 512
        activation: 'tanh'
      bridge: !CopyBridge {}
    inference: !AutoRegressiveInference
      post_process: join-piece
  # training parameters
  train: !SimpleTrainingRegimen
    batcher: !SrcBatcher
      batch_size: 32
    trainer: !AdamTrainer
      alpha: 0.001
    run_for_epochs: 20
    src_file: examples/data/head.ja
    trg_file: examples/data/head.en
    dev_tasks:
      - !LossEvalTask
        src_file: examples/data/head.ja
        ref_file: examples/data/head.en
  # final evaluation
  evaluate:
    - !AccuracyEvalTask
      eval_metrics: bleu
      src_file: examples/data/head.ja
      ref_file: examples/data/head.en
      hyp_file: examples/output/{EXP}.test_hyp

# XNMT supports writing out reports, such as attention matrices generated during inference.
# These are generally created by setting exp_global.compute_report to True, and adding one or several reporters
# to the inference class.
report: !Experiment
  exp_global: !ExpGlobal
    compute_report: True
  model: !DefaultTranslator
    src_reader: !PlainTextReader
      vocab: !Vocab {vocab_file: examples/data/head.ja.vocab}
    trg_reader: !PlainTextReader
      vocab: !Vocab {vocab_file: examples/data/head.en.vocab}
  train: !SimpleTrainingRegimen
    run_for_epochs: 2
    src_file: examples/data/head.ja
    trg_file: examples/data/head.en
    dev_tasks:
      - !LossEvalTask
        src_file: examples/data/head.ja
        ref_file: examples/data/head.en
  train: !SimpleTrainingRegimen
    run_for_epochs: 0
    src_file: examples/data/head.ja
    trg_file: examples/data/head.en
  evaluate:
    - !AccuracyEvalTask
      eval_metrics: bleu
      src_file: examples/data/head.ja
      ref_file: examples/data/head.en
      hyp_file: examples/output/{EXP}.test_hyp
      inference: !AutoRegressiveInference
        reporter: !AttentionHtmlReporter { report_path: 'examples/output/{EXP}.report' }


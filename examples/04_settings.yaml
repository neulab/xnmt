# The basic XNMT behavior can be configured using setting files.
# By default, 3 setting files are included:
# - settings/standard.py
# - settings/debug.py
# - settings/unittest.py
# These specify things like verbosity, default paths, whether experiments
# should be skipped if the log file already exists, and whether to activate
# the DyNet check_validity and immediate_compute options.
# 
# As the name suggests, e.g. when debugging one might use XNMT as follows:
# python -m xnmt.xnmt_run_experiments --settings=settings.debug examples/04_settings.yaml
# 
# It is easy to include custom setting files (when not installed in development
# mode, setup.py might have to be re-run after changing settings).
# These can partially overwrite the existing settings when used like this:
# --settings=settings.debug,settings.my_custom_settings
settings: !Experiment
  model: !DefaultTranslator
    src_reader: !PlainTextReader
      vocab: !Vocab {vocab_file: examples/data/head.ja.vocab}
    trg_reader: !PlainTextReader
      vocab: !Vocab {vocab_file: examples/data/head.en.vocab}
  train: !SimpleTrainingRegimen
    run_for_epochs: 2
    src_file: examples/data/head.ja
    trg_file: examples/data/head.en
    dev_tasks:
      - !LossEvalTask
        src_file: examples/data/head.ja
        ref_file: examples/data/head.en
  evaluate:
    - !AccuracyEvalTask
      eval_metrics: bleu
      src_file: examples/data/head.ja
      ref_file: examples/data/head.en
      hyp_file: examples/output/{EXP}.test_hyp
